---
  # Front matter comment to ensure Jekyll properly reads file.
---

@import 'app';
@import 'variables';
@import 'footer';

body {
  font-family: $lato;
  font-weight: $lato-regular;
  h1, h2, h3, h4, h5, h6 {
    font-family: $lato;
    font-weight: $lato-bold;
  }
  font-size: 14px;
  --cell-height: 1fr;
}


$start-hour: 8;
$end-hour: 12;
$interval: 15;

$grid-rows: "[tracks] auto";

@for $h from $start-hour through $end-hour {
  @for $m from 0 through 45 {
    @if ($m % $interval == 0 and not ($h == $end-hour and $m > 0)) {
      $hour-str: if($h < 10, "0#{$h}", "#{$h}");
      $min-str: if($m == 0, "00", "#{$m}");
      $time-str: "#{$hour-str}#{$min-str}";
      $grid-rows: "#{$grid-rows} [time-#{$time-str}] var(--cell-height)";
    }
  }
}


.calendar {
  .calendar-scroll {
    display: flex;
    height: 100%;
  }

  .time-column {
    position: sticky;
    left: 0;
    background: white;
    border-right: 1px solid #ccc;
    flex-shrink: 0;
    z-index: 2;
    grid-template-rows: #{$grid-rows};
    display: grid;
  }

  .time-slot {
    height: 3rem;
    line-height: 3rem;
    padding-inline: 8px;
    border-bottom: 1px solid #eee;
    font-size: 0.9rem;
    color: #555;
    text-align: right;
  }

  .tracks-container {
    display: flex;
    position: relative;
    // background: #f8f8f8;
    flex-grow: 1;
    // scroll-snap-type: x mandatory; //TODO figure out how to make this one work
  }

  .track {
    position: relative;
    // min-width: 180px;
    width: 20rem;
    padding-inline: 0.5em;
    border-right: 1px solid #ddd;
    display: grid;
    scroll-snap-align: start;
    grid-template-columns: 1fr; /* One column */
    // grid-auto-rows: 1fr;        /* Each row gets equal height */
    height: 100vh;              /* or any fixed height */
    gap: 0.25rem;
    grid-template-rows: #{$grid-rows};
    // on mobile make a track 80% of screen with for future tracks peak out from the edge and also have it snap scroll horizontally
  }
  .event-link{
    color: inherit;
    &:hover{
      text-decoration: none;
      .event{
        background: #dddddd;
      }
    }
  }
  .event {
    background: #EAEAEA;
    border-radius: 10px;
    padding: 0.7142857143rem; /* 10px */
    transition: $sprint;
    h4{
      font-size: 1.1428571429rem; /* 16px */
    }
    p{
      margin: 0;
    }
    .time{
      color: rgba($pure-black, 0.6);
    }
    .description{
      margin-block: 0.25rem;
    }
    .contributors{
      color: rgba($pure-black, 0.6);
    }
    .presentation{
      background-color: rgba($pure-black, 0.1);
      padding: 0.3571428571rem;
      border-radius: 5px;
      h5{
        font-size: 1rem;
      }
      &:not(:last-of-type){
        margin-block-end: 0.3571428571rem;
      }
    }
  }

}

article{
  .event-type{
    display: inline-block;
    background-color: rgba(#167BAA, 0.25);
    padding-inline: 0.7142857143rem;
    padding-block: 0.1428571429rem;
    border-radius: $pill-radius;
    text-transform: capitalize;
  }
  h1{
    &.event-title{
      font-size: 2.2857142857rem;
    }
  }
  .event-meta{
    color: rgba($pure-black, 0.6);
    .divider-dot{
      margin-inline: 1rem 0.4rem;
    }
    .icon-wrapper{
      aspect-ratio: 1/1;
      svg{
        width: 1.5rem;
      }
    }
    .session-chair{
      .divider{
        height: 2px;
        width: 5rem;
        background-color: rgba($pure-black, 0.25);
        border-radius: $pill-radius;
        margin-block: 1rem;
      }
    }
  }
}